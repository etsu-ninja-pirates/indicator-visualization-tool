"""
Django settings for health_data_app project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import socket

FORCE_DEBUG = False
HOSTNAME = socket.gethostname()
ON_CSCI5910 = HOSTNAME == 'cs5910'
DEBUG = (not ON_CSCI5910) or FORCE_DEBUG

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'e#8$=*gicerm51p_5k5u1%%dcv0y6$u#k7fsa7zhxn8ab&r^ul'

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'hda_privileged',
    'hda_public',
    'app_api',
    'behave_django',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'health_data_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'health_data_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

# when referencing a static file, the URL is the hostname + this path +
# the file path relative to whatever directory the static files are actually in
STATIC_URL = '/static/'

# By default, django.contrib.staticfiles will look for files in
# "<project>/<app>/static"; this adds an additional directory to search,
# so we can also put files in "<project>/static/" if the file is used by
# several different apps
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# static files that are not assets (e.g. user uploads)
# will be served from this URL; the web server (e.g. nginx)
# should be configured to serve requests to this URL from
# the MEDIA_ROOT directory specified below
MEDIA_URL = '/media/'

# when using the django development server, files are uploaded
# to and  served from a 'media' folder in the project root
# (so add that to .gitignore!)
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# "Production" settings:
# Rather than use this boolean in functions and have everything in one file,
# we'll see if it's simpler to just have all the production stuff in its own
# file that overwrites the variables in here as necessary:
if ON_CSCI5910:
    from .settings_oncs5910 import *

# This is not the fanciest or most flexible way to do this; here's a whole
# thread on the subject: https://code.djangoproject.com/wiki/SplitSettings

